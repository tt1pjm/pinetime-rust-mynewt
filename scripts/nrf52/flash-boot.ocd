# This is an OpenOCD script that connects ST-Link or Raspberry Pi to the nRF52 and flashes the Bootloader ROM.
# Used by tasks.json for "Load Bootloader" command.
# Equivalent to "newt load -v nrf52_boot".

# From https://devzone.nordicsemi.com/f/nordic-q-a/42824/flashing-nrf5832-using-only-st-link-v2-and-openocd
gdb_flash_program enable
gdb_breakpoint_override hard

$_TARGETNAME configure -event reset-init {
    # Arm Semihosting is used to show debug console output and may only be enabled after init event.  We wait for the event and enable Arm Semihosting.
    echo "Enabled ARM Semihosting to show debug output"
    arm semihosting enable
}

# Connect to the device.
init

# Raspberry Pi fails with timeout when calling "reset halt" here, so we "reset" then "halt".
echo "Stopping..."
reset
halt
echo ""

# Bootloader address must sync with hw/bsp/nrf52/bsp.yml. For Stub Bootloader, select "bin/targets/nrf52_boot/app/apps/boot_stub/boot_stub.elf.bin"
echo "Flashing Bootloader..."

# For MCUBoot (debugging not supported):
program bin/targets/nrf52_boot/app/boot/mynewt/mynewt.elf.bin verify 0x00000000

# For Stub Bootloader (supports debugging):
# program bin/targets/nrf52_boot/app/apps/boot_stub/boot_stub.elf.bin verify 0x00000000

echo ""

# Restart the device and start the bootloader.
echo "Restarting..."
reset init
resume
echo ""

echo "**** Done! Press Ctrl-C to exit..."
